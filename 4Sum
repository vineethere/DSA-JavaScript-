// https://neetcode.io/problems/4sum?list=neetcode250

// O(n^4) time complexity
class Solution {
    /**
     * @param {number[]} nums
     * @param {number} target
     * @return {number[][]}
     */
    fourSum(nums, target) {
        let n=nums.length;
        let res = [];
        let seen=new Set();
        nums.sort((a,b)=>a-b);
        for(let i=0;i<n;i++){
            for(let j=i+1;j<n;j++){
                for(let k =j+1;k<n;k++){
                    for(let l=k+1;l<n;l++){
                        if(nums[i]+nums[j]+nums[k]+nums[l] === target){
                            let tempArr=[nums[i],nums[j],nums[k],nums[l]].join(',');
                            if(!seen.has(tempArr)){
                                seen.add(tempArr);
                                res.push([nums[i],nums[j],nums[k],nums[l]]);
                            }
                        }
                    }
                }
            }
        }
        return res;
    }
}
